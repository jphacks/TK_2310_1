// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: get_event_search.proto

package gen

import (
	encoding_binary "encoding/binary"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event struct {
	Id                        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                     string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	HostCompanyId             string   `protobuf:"bytes,3,opt,name=host_company_id,json=hostCompanyId,proto3" json:"host_company_id,omitempty"`
	Description               string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Address                   string   `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Latitude                  float64  `protobuf:"fixed64,6,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude                 float64  `protobuf:"fixed64,7,opt,name=longitude,proto3" json:"longitude,omitempty"`
	ParticipantCount          int64    `protobuf:"varint,8,opt,name=participant_count,json=participantCount,proto3" json:"participant_count,omitempty"`
	UnitPrice                 int64    `protobuf:"varint,9,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	WillStartAt               string   `protobuf:"bytes,10,opt,name=will_start_at,json=willStartAt,proto3" json:"will_start_at,omitempty"`
	WillCompleteAt            string   `protobuf:"bytes,11,opt,name=will_complete_at,json=willCompleteAt,proto3" json:"will_complete_at,omitempty"`
	ApplicationDeadline       string   `protobuf:"bytes,12,opt,name=application_deadline,json=applicationDeadline,proto3" json:"application_deadline,omitempty"`
	Leader                    string   `protobuf:"bytes,13,opt,name=leader,proto3" json:"leader,omitempty"`
	StartedAt                 string   `protobuf:"bytes,14,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt               string   `protobuf:"bytes,15,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	ProofParticipantsImageUrl string   `protobuf:"bytes,16,opt,name=proof_participants_image_url,json=proofParticipantsImageUrl,proto3" json:"proof_participants_image_url,omitempty"`
	ProofGarbageImageUrl      string   `protobuf:"bytes,17,opt,name=proof_garbage_image_url,json=proofGarbageImageUrl,proto3" json:"proof_garbage_image_url,omitempty"`
	Report                    string   `protobuf:"bytes,18,opt,name=report,proto3" json:"report,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a7a457813c24d16, []int{0}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Event.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return m.Size()
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event) GetHostCompanyId() string {
	if m != nil {
		return m.HostCompanyId
	}
	return ""
}

func (m *Event) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Event) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Event) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Event) GetParticipantCount() int64 {
	if m != nil {
		return m.ParticipantCount
	}
	return 0
}

func (m *Event) GetUnitPrice() int64 {
	if m != nil {
		return m.UnitPrice
	}
	return 0
}

func (m *Event) GetWillStartAt() string {
	if m != nil {
		return m.WillStartAt
	}
	return ""
}

func (m *Event) GetWillCompleteAt() string {
	if m != nil {
		return m.WillCompleteAt
	}
	return ""
}

func (m *Event) GetApplicationDeadline() string {
	if m != nil {
		return m.ApplicationDeadline
	}
	return ""
}

func (m *Event) GetLeader() string {
	if m != nil {
		return m.Leader
	}
	return ""
}

func (m *Event) GetStartedAt() string {
	if m != nil {
		return m.StartedAt
	}
	return ""
}

func (m *Event) GetCompletedAt() string {
	if m != nil {
		return m.CompletedAt
	}
	return ""
}

func (m *Event) GetProofParticipantsImageUrl() string {
	if m != nil {
		return m.ProofParticipantsImageUrl
	}
	return ""
}

func (m *Event) GetProofGarbageImageUrl() string {
	if m != nil {
		return m.ProofGarbageImageUrl
	}
	return ""
}

func (m *Event) GetReport() string {
	if m != nil {
		return m.Report
	}
	return ""
}

type GetEventSearchRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventSearchRequest) Reset()         { *m = GetEventSearchRequest{} }
func (m *GetEventSearchRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventSearchRequest) ProtoMessage()    {}
func (*GetEventSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a7a457813c24d16, []int{1}
}
func (m *GetEventSearchRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetEventSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetEventSearchRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetEventSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventSearchRequest.Merge(m, src)
}
func (m *GetEventSearchRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetEventSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventSearchRequest proto.InternalMessageInfo

type GetEventSearchResponse struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventSearchResponse) Reset()         { *m = GetEventSearchResponse{} }
func (m *GetEventSearchResponse) String() string { return proto.CompactTextString(m) }
func (*GetEventSearchResponse) ProtoMessage()    {}
func (*GetEventSearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a7a457813c24d16, []int{2}
}
func (m *GetEventSearchResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetEventSearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetEventSearchResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetEventSearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventSearchResponse.Merge(m, src)
}
func (m *GetEventSearchResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetEventSearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventSearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventSearchResponse proto.InternalMessageInfo

func (m *GetEventSearchResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func init() {
	proto.RegisterType((*Event)(nil), "api.Event")
	proto.RegisterType((*GetEventSearchRequest)(nil), "api.GetEventSearchRequest")
	proto.RegisterType((*GetEventSearchResponse)(nil), "api.GetEventSearchResponse")
}

func init() { proto.RegisterFile("get_event_search.proto", fileDescriptor_3a7a457813c24d16) }

var fileDescriptor_3a7a457813c24d16 = []byte{
	// 501 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0x41, 0x6f, 0x12, 0x41,
	0x14, 0xc7, 0x5d, 0x28, 0xb4, 0x3c, 0x0a, 0xa5, 0x23, 0xc2, 0xd8, 0x54, 0x82, 0x1c, 0x0c, 0x89,
	0x09, 0x8d, 0x1a, 0x6f, 0x26, 0x06, 0xd1, 0x34, 0xbd, 0x35, 0x34, 0x5e, 0xbc, 0x6c, 0xa6, 0x3b,
	0x4f, 0x3a, 0xc9, 0x74, 0x77, 0x9c, 0x79, 0xd4, 0x78, 0xf5, 0x53, 0xf8, 0x91, 0x3c, 0xfa, 0x11,
	0x0c, 0x7e, 0x11, 0x33, 0x6f, 0x81, 0x92, 0xde, 0xf6, 0xfd, 0x7e, 0xff, 0xb7, 0xfb, 0x66, 0xf6,
	0x41, 0x6f, 0x81, 0x94, 0xe2, 0x1d, 0xe6, 0x94, 0x06, 0x54, 0x3e, 0xbb, 0x99, 0x38, 0x5f, 0x50,
	0x21, 0xaa, 0xca, 0x99, 0x93, 0xfe, 0x9d, 0xb2, 0x46, 0x2b, 0xc2, 0xb3, 0xcd, 0x43, 0x69, 0x47,
	0x3f, 0x6b, 0x50, 0xfb, 0x14, 0x9b, 0x44, 0x1b, 0x2a, 0x46, 0xcb, 0x64, 0x98, 0x8c, 0x1b, 0xf3,
	0x8a, 0xd1, 0xa2, 0x0b, 0x35, 0x32, 0x64, 0x51, 0x56, 0x18, 0x95, 0x85, 0x78, 0x01, 0x47, 0x37,
	0x45, 0xa0, 0x34, 0x2b, 0x6e, 0x9d, 0xca, 0x7f, 0xa4, 0x46, 0xcb, 0x2a, 0xfb, 0x56, 0xc4, 0xb3,
	0x92, 0x5e, 0x68, 0x31, 0x84, 0xa6, 0xc6, 0x90, 0x79, 0xe3, 0xc8, 0x14, 0xb9, 0xdc, 0xe3, 0xcc,
	0x2e, 0x12, 0x12, 0xf6, 0x95, 0xd6, 0x1e, 0x43, 0x90, 0x35, 0xb6, 0x9b, 0x52, 0x9c, 0xc0, 0x81,
	0x55, 0x64, 0x68, 0xa9, 0x51, 0xd6, 0x87, 0xc9, 0x38, 0x99, 0x6f, 0x6b, 0x71, 0x0a, 0x0d, 0x5b,
	0xe4, 0x8b, 0x52, 0xee, 0xb3, 0xbc, 0x07, 0xe2, 0x25, 0x1c, 0x3b, 0xe5, 0xc9, 0x64, 0xc6, 0xa9,
	0x3c, 0x0e, 0xb9, 0xcc, 0x49, 0x1e, 0x0c, 0x93, 0x71, 0x75, 0xde, 0xd9, 0x11, 0xb3, 0xc8, 0xc5,
	0x33, 0x80, 0x65, 0x6e, 0x28, 0x75, 0xde, 0x64, 0x28, 0x1b, 0x9c, 0x6a, 0x44, 0x72, 0x19, 0x81,
	0x18, 0x41, 0xeb, 0xbb, 0xb1, 0x36, 0x0d, 0xa4, 0x3c, 0xa5, 0x8a, 0x24, 0x94, 0x67, 0x88, 0xf0,
	0x2a, 0xb2, 0x29, 0x89, 0x31, 0x74, 0x38, 0x13, 0x6f, 0xc3, 0x22, 0x61, 0x8c, 0x35, 0x39, 0xd6,
	0x8e, 0x7c, 0xb6, 0xc6, 0x53, 0x12, 0xaf, 0xa0, 0xab, 0x9c, 0xb3, 0x26, 0x53, 0xf1, 0xf0, 0xa9,
	0x46, 0xa5, 0xad, 0xc9, 0x51, 0x1e, 0x72, 0xfa, 0xf1, 0x8e, 0xfb, 0xb8, 0x56, 0xa2, 0x07, 0x75,
	0x8b, 0x4a, 0xa3, 0x97, 0x2d, 0x0e, 0xad, 0xab, 0x38, 0x37, 0xcf, 0x84, 0x3a, 0x7e, 0xae, 0xcd,
	0xae, 0xb1, 0x26, 0x53, 0x12, 0xcf, 0xe1, 0x70, 0x33, 0x0e, 0x07, 0x8e, 0xca, 0xb1, 0xb7, 0x6c,
	0x4a, 0xe2, 0x3d, 0x9c, 0x3a, 0x5f, 0x14, 0x5f, 0xd3, 0x9d, 0x3b, 0x09, 0xa9, 0xb9, 0x55, 0x0b,
	0x4c, 0x97, 0xde, 0xca, 0x0e, 0xb7, 0x3c, 0xe5, 0xcc, 0xe5, 0x4e, 0xe4, 0x22, 0x26, 0x3e, 0x7b,
	0x2b, 0xde, 0x42, 0xbf, 0x7c, 0xc1, 0x42, 0xf9, 0xeb, 0xd8, 0x75, 0xdf, 0x7b, 0xcc, 0xbd, 0x5d,
	0xd6, 0xe7, 0xa5, 0xdd, 0xb6, 0xf5, 0xa0, 0xee, 0xd1, 0x15, 0x9e, 0xa4, 0x28, 0x4f, 0x54, 0x56,
	0xa3, 0x3e, 0x3c, 0x39, 0x47, 0xe2, 0x35, 0xbc, 0xe2, 0xd5, 0x9d, 0xe3, 0xb7, 0x25, 0x06, 0x1a,
	0xbd, 0x83, 0xde, 0x43, 0x11, 0x5c, 0x91, 0x87, 0xf8, 0x77, 0xea, 0xbc, 0xeb, 0x41, 0x26, 0xc3,
	0xea, 0xb8, 0xf9, 0x1a, 0x26, 0xca, 0x99, 0x09, 0x27, 0xe7, 0x6b, 0xf3, 0xa1, 0xf7, 0x7b, 0x35,
	0x48, 0xfe, 0xac, 0x06, 0xc9, 0xdf, 0xd5, 0x20, 0xf9, 0xf5, 0x6f, 0xf0, 0xe8, 0xcb, 0xde, 0xd9,
	0x02, 0xf3, 0xeb, 0x3a, 0xaf, 0xfe, 0x9b, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0xda, 0x23, 0x48,
	0xc7, 0x32, 0x03, 0x00, 0x00,
}

func (m *Event) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Event) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Report) > 0 {
		i -= len(m.Report)
		copy(dAtA[i:], m.Report)
		i = encodeVarintGetEventSearch(dAtA, i, uint64(len(m.Report)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if len(m.ProofGarbageImageUrl) > 0 {
		i -= len(m.ProofGarbageImageUrl)
		copy(dAtA[i:], m.ProofGarbageImageUrl)
		i = encodeVarintGetEventSearch(dAtA, i, uint64(len(m.ProofGarbageImageUrl)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.ProofParticipantsImageUrl) > 0 {
		i -= len(m.ProofParticipantsImageUrl)
		copy(dAtA[i:], m.ProofParticipantsImageUrl)
		i = encodeVarintGetEventSearch(dAtA, i, uint64(len(m.ProofParticipantsImageUrl)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.CompletedAt) > 0 {
		i -= len(m.CompletedAt)
		copy(dAtA[i:], m.CompletedAt)
		i = encodeVarintGetEventSearch(dAtA, i, uint64(len(m.CompletedAt)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.StartedAt) > 0 {
		i -= len(m.StartedAt)
		copy(dAtA[i:], m.StartedAt)
		i = encodeVarintGetEventSearch(dAtA, i, uint64(len(m.StartedAt)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.Leader) > 0 {
		i -= len(m.Leader)
		copy(dAtA[i:], m.Leader)
		i = encodeVarintGetEventSearch(dAtA, i, uint64(len(m.Leader)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.ApplicationDeadline) > 0 {
		i -= len(m.ApplicationDeadline)
		copy(dAtA[i:], m.ApplicationDeadline)
		i = encodeVarintGetEventSearch(dAtA, i, uint64(len(m.ApplicationDeadline)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.WillCompleteAt) > 0 {
		i -= len(m.WillCompleteAt)
		copy(dAtA[i:], m.WillCompleteAt)
		i = encodeVarintGetEventSearch(dAtA, i, uint64(len(m.WillCompleteAt)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.WillStartAt) > 0 {
		i -= len(m.WillStartAt)
		copy(dAtA[i:], m.WillStartAt)
		i = encodeVarintGetEventSearch(dAtA, i, uint64(len(m.WillStartAt)))
		i--
		dAtA[i] = 0x52
	}
	if m.UnitPrice != 0 {
		i = encodeVarintGetEventSearch(dAtA, i, uint64(m.UnitPrice))
		i--
		dAtA[i] = 0x48
	}
	if m.ParticipantCount != 0 {
		i = encodeVarintGetEventSearch(dAtA, i, uint64(m.ParticipantCount))
		i--
		dAtA[i] = 0x40
	}
	if m.Longitude != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Longitude))))
		i--
		dAtA[i] = 0x39
	}
	if m.Latitude != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Latitude))))
		i--
		dAtA[i] = 0x31
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintGetEventSearch(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintGetEventSearch(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.HostCompanyId) > 0 {
		i -= len(m.HostCompanyId)
		copy(dAtA[i:], m.HostCompanyId)
		i = encodeVarintGetEventSearch(dAtA, i, uint64(len(m.HostCompanyId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintGetEventSearch(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintGetEventSearch(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetEventSearchRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetEventSearchRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetEventSearchRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GetEventSearchResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetEventSearchResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetEventSearchResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Events) > 0 {
		for iNdEx := len(m.Events) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Events[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGetEventSearch(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintGetEventSearch(dAtA []byte, offset int, v uint64) int {
	offset -= sovGetEventSearch(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Event) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovGetEventSearch(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovGetEventSearch(uint64(l))
	}
	l = len(m.HostCompanyId)
	if l > 0 {
		n += 1 + l + sovGetEventSearch(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovGetEventSearch(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovGetEventSearch(uint64(l))
	}
	if m.Latitude != 0 {
		n += 9
	}
	if m.Longitude != 0 {
		n += 9
	}
	if m.ParticipantCount != 0 {
		n += 1 + sovGetEventSearch(uint64(m.ParticipantCount))
	}
	if m.UnitPrice != 0 {
		n += 1 + sovGetEventSearch(uint64(m.UnitPrice))
	}
	l = len(m.WillStartAt)
	if l > 0 {
		n += 1 + l + sovGetEventSearch(uint64(l))
	}
	l = len(m.WillCompleteAt)
	if l > 0 {
		n += 1 + l + sovGetEventSearch(uint64(l))
	}
	l = len(m.ApplicationDeadline)
	if l > 0 {
		n += 1 + l + sovGetEventSearch(uint64(l))
	}
	l = len(m.Leader)
	if l > 0 {
		n += 1 + l + sovGetEventSearch(uint64(l))
	}
	l = len(m.StartedAt)
	if l > 0 {
		n += 1 + l + sovGetEventSearch(uint64(l))
	}
	l = len(m.CompletedAt)
	if l > 0 {
		n += 1 + l + sovGetEventSearch(uint64(l))
	}
	l = len(m.ProofParticipantsImageUrl)
	if l > 0 {
		n += 2 + l + sovGetEventSearch(uint64(l))
	}
	l = len(m.ProofGarbageImageUrl)
	if l > 0 {
		n += 2 + l + sovGetEventSearch(uint64(l))
	}
	l = len(m.Report)
	if l > 0 {
		n += 2 + l + sovGetEventSearch(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetEventSearchRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetEventSearchResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Events) > 0 {
		for _, e := range m.Events {
			l = e.Size()
			n += 1 + l + sovGetEventSearch(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovGetEventSearch(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGetEventSearch(x uint64) (n int) {
	return sovGetEventSearch(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Event) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGetEventSearch
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Event: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Event: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HostCompanyId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HostCompanyId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Latitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Latitude = float64(math.Float64frombits(v))
		case 7:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Longitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Longitude = float64(math.Float64frombits(v))
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParticipantCount", wireType)
			}
			m.ParticipantCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ParticipantCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnitPrice", wireType)
			}
			m.UnitPrice = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnitPrice |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WillStartAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WillStartAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WillCompleteAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WillCompleteAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApplicationDeadline", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApplicationDeadline = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Leader", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Leader = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompletedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CompletedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProofParticipantsImageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProofParticipantsImageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProofGarbageImageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProofGarbageImageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Report", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Report = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGetEventSearch(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetEventSearchRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGetEventSearch
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetEventSearchRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetEventSearchRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGetEventSearch(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetEventSearchResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGetEventSearch
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetEventSearchResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetEventSearchResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Events", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Events = append(m.Events, &Event{})
			if err := m.Events[len(m.Events)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGetEventSearch(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGetEventSearch
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGetEventSearch(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGetEventSearch
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGetEventSearch
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGetEventSearch
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGetEventSearch
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGetEventSearch
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGetEventSearch        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGetEventSearch          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGetEventSearch = fmt.Errorf("proto: unexpected end of group")
)
