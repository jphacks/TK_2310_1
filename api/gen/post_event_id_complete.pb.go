// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: post_event_id_complete.proto

package gen

import (
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PostEventIdCompleteRequest struct {
	ProofParticipantsImageUrl string   `protobuf:"bytes,1,opt,name=proof_participants_image_url,json=proofParticipantsImageUrl,proto3" json:"proof_participants_image_url,omitempty"`
	ProofGarbageImageUrl      string   `protobuf:"bytes,2,opt,name=proof_garbage_image_url,json=proofGarbageImageUrl,proto3" json:"proof_garbage_image_url,omitempty"`
	Report                    string   `protobuf:"bytes,3,opt,name=report,proto3" json:"report,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *PostEventIdCompleteRequest) Reset()         { *m = PostEventIdCompleteRequest{} }
func (m *PostEventIdCompleteRequest) String() string { return proto.CompactTextString(m) }
func (*PostEventIdCompleteRequest) ProtoMessage()    {}
func (*PostEventIdCompleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_435bf601a8f0cbbf, []int{0}
}
func (m *PostEventIdCompleteRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PostEventIdCompleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PostEventIdCompleteRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PostEventIdCompleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostEventIdCompleteRequest.Merge(m, src)
}
func (m *PostEventIdCompleteRequest) XXX_Size() int {
	return m.Size()
}
func (m *PostEventIdCompleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostEventIdCompleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostEventIdCompleteRequest proto.InternalMessageInfo

func (m *PostEventIdCompleteRequest) GetProofParticipantsImageUrl() string {
	if m != nil {
		return m.ProofParticipantsImageUrl
	}
	return ""
}

func (m *PostEventIdCompleteRequest) GetProofGarbageImageUrl() string {
	if m != nil {
		return m.ProofGarbageImageUrl
	}
	return ""
}

func (m *PostEventIdCompleteRequest) GetReport() string {
	if m != nil {
		return m.Report
	}
	return ""
}

func init() {
	proto.RegisterType((*PostEventIdCompleteRequest)(nil), "api.PostEventIdCompleteRequest")
}

func init() { proto.RegisterFile("post_event_id_complete.proto", fileDescriptor_435bf601a8f0cbbf) }

var fileDescriptor_435bf601a8f0cbbf = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0xc8, 0x2f, 0x2e,
	0x89, 0x4f, 0x2d, 0x4b, 0xcd, 0x2b, 0x89, 0xcf, 0x4c, 0x89, 0x4f, 0xce, 0xcf, 0x2d, 0xc8, 0x49,
	0x2d, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x94, 0x12, 0x2f,
	0x4b, 0xcc, 0xc9, 0x4c, 0x49, 0x2c, 0x49, 0xd5, 0x87, 0x31, 0x20, 0xb2, 0x4a, 0xc7, 0x19, 0xb9,
	0xa4, 0x02, 0xf2, 0x8b, 0x4b, 0x5c, 0x41, 0xba, 0x3d, 0x53, 0x9c, 0xa1, 0x7a, 0x83, 0x52, 0x0b,
	0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x3c, 0xb8, 0x64, 0x0a, 0x8a, 0xf2, 0xf3, 0xd3, 0xe2, 0x0b, 0x12,
	0x8b, 0x4a, 0x32, 0x93, 0x33, 0x0b, 0x12, 0xf3, 0x4a, 0x8a, 0xe3, 0x33, 0x73, 0x13, 0xd3, 0x53,
	0xe3, 0x4b, 0x8b, 0x72, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x9d, 0xd8, 0x7f, 0x39, 0xb1, 0x14,
	0x31, 0x09, 0x30, 0x06, 0x49, 0x82, 0x15, 0x07, 0x20, 0xa9, 0xf5, 0x04, 0x29, 0x0d, 0x2d, 0xca,
	0x11, 0xb2, 0xe3, 0x12, 0x87, 0x98, 0x94, 0x9e, 0x58, 0x94, 0x04, 0xd2, 0x8e, 0x30, 0x84, 0x09,
	0xd5, 0x10, 0x11, 0xb0, 0x3a, 0x77, 0x88, 0x32, 0xb8, 0x7e, 0x79, 0x2e, 0xb6, 0xa2, 0xd4, 0x82,
	0xfc, 0xa2, 0x12, 0x09, 0x66, 0x54, 0xe5, 0x50, 0x61, 0x27, 0xb1, 0x13, 0x8f, 0xe4, 0x18, 0x2f,
	0x3c, 0x92, 0x63, 0x7c, 0xf0, 0x48, 0x8e, 0x71, 0xc6, 0x63, 0x39, 0x86, 0x28, 0x16, 0xfd, 0xf4,
	0xd4, 0xbc, 0x24, 0x36, 0xb0, 0x47, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x34, 0xa2, 0xdd,
	0xcc, 0x26, 0x01, 0x00, 0x00,
}

func (m *PostEventIdCompleteRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PostEventIdCompleteRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PostEventIdCompleteRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Report) > 0 {
		i -= len(m.Report)
		copy(dAtA[i:], m.Report)
		i = encodeVarintPostEventIdComplete(dAtA, i, uint64(len(m.Report)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ProofGarbageImageUrl) > 0 {
		i -= len(m.ProofGarbageImageUrl)
		copy(dAtA[i:], m.ProofGarbageImageUrl)
		i = encodeVarintPostEventIdComplete(dAtA, i, uint64(len(m.ProofGarbageImageUrl)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ProofParticipantsImageUrl) > 0 {
		i -= len(m.ProofParticipantsImageUrl)
		copy(dAtA[i:], m.ProofParticipantsImageUrl)
		i = encodeVarintPostEventIdComplete(dAtA, i, uint64(len(m.ProofParticipantsImageUrl)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintPostEventIdComplete(dAtA []byte, offset int, v uint64) int {
	offset -= sovPostEventIdComplete(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PostEventIdCompleteRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ProofParticipantsImageUrl)
	if l > 0 {
		n += 1 + l + sovPostEventIdComplete(uint64(l))
	}
	l = len(m.ProofGarbageImageUrl)
	if l > 0 {
		n += 1 + l + sovPostEventIdComplete(uint64(l))
	}
	l = len(m.Report)
	if l > 0 {
		n += 1 + l + sovPostEventIdComplete(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovPostEventIdComplete(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPostEventIdComplete(x uint64) (n int) {
	return sovPostEventIdComplete(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PostEventIdCompleteRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPostEventIdComplete
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PostEventIdCompleteRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PostEventIdCompleteRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProofParticipantsImageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPostEventIdComplete
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPostEventIdComplete
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPostEventIdComplete
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProofParticipantsImageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProofGarbageImageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPostEventIdComplete
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPostEventIdComplete
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPostEventIdComplete
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProofGarbageImageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Report", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPostEventIdComplete
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPostEventIdComplete
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPostEventIdComplete
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Report = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPostEventIdComplete(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPostEventIdComplete
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPostEventIdComplete(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPostEventIdComplete
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPostEventIdComplete
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPostEventIdComplete
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPostEventIdComplete
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPostEventIdComplete
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPostEventIdComplete
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPostEventIdComplete        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPostEventIdComplete          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPostEventIdComplete = fmt.Errorf("proto: unexpected end of group")
)
